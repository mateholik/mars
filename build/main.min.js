const API_KEY="swK1ZwPxs8cuz4XuHXX7RG7zDFmZZa78YDWs0U0C",API_URL=`https://api.nasa.gov/insight_weather/?api_key=${API_KEY}&feedtype=json&ver=1.0`,spanDate=document.getElementById("date"),spanMaxTemp=document.getElementById("maxTemp"),spanMinTemp=document.getElementById("minTemp"),spanSol=document.getElementById("sol"),spanWindDirectionCardinal=document.getElementById("windDirectionCardinal"),spanWindDirectionDegrees=document.getElementById("windDirectionDegrees"),spanWindSpeed=document.getElementById("windSpeed"),previousDate=document.getElementById("previous-date"),previousMaxTemp=document.getElementById("previous-maxTemp"),previousMinTemp=document.getElementById("previous-minTemp"),previousSol=document.getElementById("previous-sol"),previousSolsTemplate=document.getElementById("previous-sols-template"),previousSolsContainer=document.getElementById("previous-sols"),unitToggle=document.getElementById("unit-toggle"),metricRadio=document.getElementById("cel"),imperialRadio=document.getElementById("fah");let selectedSolIndex;function displaySelectedSol(e){const t=e[selectedSolIndex];spanDate.innerHTML=formatDate(t.date),spanMaxTemp.innerHTML=formatTemperature(t.maxTemp),spanMinTemp.innerHTML=formatTemperature(t.minTemp),spanSol.innerHTML=t.sol,spanWindDirectionCardinal.innerHTML=t.windDirectionCardinal,spanWindDirectionDegrees.style.setProperty("--direction",t.windDirectionDegrees+"deg"),spanWindSpeed.innerHTML=formatSpeed(t.windSpeed)}function displayPreviousSols(e){previousSolsContainer.innerHTML="",e.forEach((t,n)=>{const i=previousSolsTemplate.content.cloneNode(!0);i.getElementById("previous-date").innerHTML=formatDate(t.date),i.getElementById("previous-maxTemp").innerHTML=formatTemperature(t.maxTemp),i.getElementById("previous-minTemp").innerHTML=formatTemperature(t.minTemp),i.getElementById("previous-sol").innerHTML=t.sol,i.getElementById("previous-button").addEventListener("click",()=>{selectedSolIndex=n,displaySelectedSol(e)}),previousSolsContainer.appendChild(i)})}function formatDate(e){return e.toLocaleDateString("en-EN",{day:"numeric",month:"long"})}function formatTemperature(e){let t=e;return isMetric()||(t=1.8*e+32),Math.round(t)}function formatSpeed(e){let t=e;return isMetric()||(t=e/1.609),Math.round(t)}function getWeather(){return fetch(API_URL).then(e=>e.json()).then(e=>{const{sol_keys:t,validity_checks:n,...i}=e;return Object.entries(i).map(([e,t])=>({sol:e,maxTemp:t.AT.mx,minTemp:t.AT.mn,windSpeed:t.HWS.av,windDirectionDegrees:t.WD.most_common.compass_degrees,windDirectionCardinal:t.WD.most_common.compass_point,date:new Date(t.First_UTC)}))})}function updateUnits(){const e=document.querySelectorAll("[data-speed-unit]"),t=document.querySelectorAll("[data-temp-unit]");e.forEach(e=>{e.innerHTML=isMetric()?"kph":"mph"}),t.forEach(e=>{e.innerHTML=isMetric()?"C":"F"}),updateTextNums()}function updateTextNums(){const e=[-60,-125,20];document.querySelectorAll("[data-text-num]").forEach((t,n)=>{let i=t.innerHTML;i=isMetric()?e[n]:1.8*t.innerHTML+32,t.innerHTML=Math.round(i)})}function isMetric(){return metricRadio.checked}getWeather().then(e=>{selectedSolIndex=e.length-1,displaySelectedSol(e),displayPreviousSols(e),updateUnits(),unitToggle.addEventListener("click",()=>{let t=!isMetric();metricRadio.checked=t,imperialRadio.checked=!t,displaySelectedSol(e),displayPreviousSols(e),updateUnits()}),metricRadio.addEventListener("change",()=>{displaySelectedSol(e),displayPreviousSols(e),updateUnits()}),imperialRadio.addEventListener("change",()=>{displaySelectedSol(e),displayPreviousSols(e),updateUnits()})}),document.getElementById("open").addEventListener("click",function(){document.getElementById("bottom").classList.toggle("bottom-open"),document.querySelector("#open span").classList.toggle("previous__open-rotate")});